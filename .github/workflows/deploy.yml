name: Build and Deploy game-h5

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 设置Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.12.0
          # 使用npm缓存
          cache: npm

      # 安装项目依赖
      - name: Install dependencies
        run: |
          echo "使用npm安装项目依赖..."
          npm install --legacy-peer-deps
          echo "npm版本：$(npm --version)"

      # 构建项目
      - name: Build project
        run: |
          echo "开始构建..."
          npm run build
          echo "构建完成，检查产物..."
          ls -la dist/
          if [ ! -d "dist" ] || [ ! -f "dist/index.html" ]; then
            echo "错误：构建产物不完整"
            exit 1
          fi
          # 创建.nojekyll文件以防止GitHub Pages使用Jekyll构建
          echo "创建.nojekyll文件..."
          touch dist/.nojekyll

      # 检查dist目录内容
      - name: Check dist contents
        run: |
          echo "检查dist目录详细内容..."
          find dist -type f | sort
          echo "dist目录大小统计:"
          du -sh dist/

      # 部署到GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
          force_orphan: true
          commit_message: "chore: deploy ${{ github.sha }}"
          # 重要：禁用Jekyll并确保不使用/docs目录
          enable_jekyll: false
          keep_files: false
          # 显式设置发布目录为dist
          destination_dir: /

      # 部署结果通知
      - name: Deployment result
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ 部署成功！"
          else
            echo "❌ 部署失败，请检查日志。"
          fi
